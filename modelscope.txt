创建MCP服务
为了方便用户将开源的 MCP Server 快速提交收录到 ModelScope MCP 广场，我们提供了创建 MCP 服务的功能。现在，您可以将自己的 AI 服务或工具轻松集成到魔搭平台，与更多用户共享！ 本文将详细介绍如何在魔搭平台创建您的 MCP 服务。

前置依赖#
在魔搭社区创建提交一个新的 MCP 服务，通常需要预先完成以下步骤：

完成 MCP 服务代码开发
发布 MCP 服务到 NPM / Pypi（可选，如需托管部署则为必选）
开源 MCP 服务源代码到Github仓库（可选）
提供 MCP 服务的使用配置及使用指引
魔搭社区鼓励广大社区用户构建好玩、有用的 MCP 服务，并积极面向社区用户开源贡献。因此我们呼吁您开放 MCP 服务的同时将 MCP 服务发布到NPM、Pypi等包管理器，并提供详实的使用指引与服务配置信息、持续维护，这对社区用户上手使用的体验来说大有裨益。

在魔搭创建提交您的 MCP 服务#
完成开发构建后，您就可以开始在魔搭社区创建提交您的 MCP 服务。

前往 MCP 创建页面#
创建入口位于 MCP 广场首页右上角，您也可以点击 这里 直接前往。为了兼顾便捷性与自由度，我们为社区用户提供了“从GitHub仓库快速创建”及“自定义创建”两种方式。通过首页创建入口进入，默认为“从GitHub仓库快速创建”，您可以在左上角切换为自定义创建。创建入口

从GitHub仓库快速创建（推荐）#
如果您已经将 MCP 服务代码及相关使用指引开源托管在 GitHub 上，推荐使用快速创建来提交您的 MCP 服务。魔搭社区将自动化解析您的仓库信息，确认必要字段的完备性，然后直接完成创建。

填写创建表单#
在快速创建页面，您仅需要填写以下核心信息：

快速创建

Github地址：填写您的MCP服务对应的GitHub仓库链接。需确保仓库根目录下存在Readme.md文件且其主要内容为介绍该 MCP 服务的使用指引与服务配置。
英文名称：英文名称将用于与您所选中的所有者名称组成MCP服务ID，格式为owner_name/mcp_server_name。
展示名称：可选，在魔搭社区各处的分发卡片上主要展示的名称。
所有者：默认选中“当前用户”。您也可以点击修改，选择将 MCP 服务归属到您所在的“组织”下。
是否公开：默认选中“公开”且当前仅支持公开。
托管类型：可选择“仅本地可用”与“可托管部署”。为了方便社区用户使用，强烈呼吁 MCP 服务贡献者提供是否适合托管部署使用的判断。如选择“仅本地可用”，意味着创建者认为使用该 MCP 服务依赖某些本地资源或其他原因，不适合远程托管部署使用；平台将自动跳过对该 MCP 服务的自动部署检测，且工具测试页不支持查看可用工具列表。如选择“可托管部署”，平台将尝试对该 MCP 服务执行自动部署检测，通过后将为社区用户提供托管部署该 MCP 服务的连接服务。
服务图标：提交当前 MCP 服务的图标，以便建立用户对该 MCP 服务品牌认知。
确认创建与自动解析#
填写完毕后，点击右下角“创建”按钮，系统将进入“创建中”并提示等待自动解析完成。如果您所提交的 GitHub 仓库地址已有其他用户提交过，系统会弹出提示并列出指向该地址的现有 MCP 服务，您可以浏览查看并决策是否仍然继续创建。

创建过程中，系统将自动解析提取以下信息并针对部分字段执行强制校验：

服务介绍：从仓库根目录下 Readme.md 文件中提取，如为空将中断快速创建。
服务描述：通过 AI 对 Readme.md正文内容进行摘要总结。
类型：通过 AI 根据 Readme.md 正文内容，从候选分类中选择。
服务配置：从 Readme.md 文件中提取服务配置（Server config），如为空将中断快速创建。
环境变量配置：从服务配置中，自动提取字段名为env的键值，并依次解析其中的键值对。
其中，服务介绍、服务配置为强制校验字段，如果无法成功解析到将会中断快速创建，您将被指引前往自定义创建。

创建成功后，页面将自动跳转至该 MCP 服务的“设置”Tab页。此时，您将看到该 MCP 服务的全部基础字段信息，包括在创建时自主填写的以及 AI 自动解析的字段信息。您可以在设置页进一步编辑基础字段信息，以确保内容的准确性。

自定义创建#
如果您想完全手动填写 MCP 服务相关基础信息，或者您的代码未开源到GitHub，您可以选择自定义创建。通过创建页面左上角的下拉菜单可以切换至自定义创建页面，您也可以点击这里前往。

在自定义创建页面，您需要手动填写所有字段：

自定义创建

填写完毕后，点击“创建”按钮，您的 MCP 服务将创建成功并跳转到服务详情页。

自动化部署检测#
无论您选择哪种创建方式，成功创建 MCP 服务后，平台均会根据您设置的”托管类型”决定是否执行自动部署检测。

如果您设置为“可托管部署”，平台将立即启动部署检测，以确认您的 MCP 服务是否可部署。如最终未通过部署检测，即使创建时您所设置的托管类型为“可托管部署”，当前 MCP 服务仍然不会被托管部署，页面上不会展示可部署与hosted标签。

部署检测核心环节如下：

服务配置解析：检测服务配置字段是否有值
一般来说通过任意创建方式进入到部署检测状态时，此项已经通过检测。
校验服务配置可用性：对所填写服务配置的 JSON 完整性、键值对等进行检测
当前只有command字段键值为npx和uvx的服务配置能够成功通过此步检测；
服务配置的 JSON 代码块中暂不支持注释，否则无法通过检测；
当提供s了多个服务配置时，平台目前默认采用第一个服务配置进行部署与检测。
尝试部署并连接到 MCP 服务：解析服务配置，下载、安装并尝试连接到MCP服务
从服务配置的args字段中获取包名，并从 NPM/Pypi 下载安装对应开发工具包；
尝试部署并连接到该 MCP 服务；
成功连接后，自动调用 list_tools 方法，如成功请求则通过检测，反之则无法通过检测。
当您的 MCP 服务通过以上三个步骤的部署检测，平台将为其打上可部署标签，如为公开 MCP 服务还会打上hosted标签。

通过部署检测的小贴示#
当前暂不支持从 GitHub 仓库下载源码或直接提供远程 URL 的托管部署，请确保所开发 MCP Server 的工程代码已经打包发布到 NPM/Pypi，以便平台顺利完成下载安装。
确保服务配置中args字段有正确指定 MCP Server 的包名，并且不要求提供任何本地绝对路径或有要求用户自定义填写的参数。
服务配置的command字段键值确保为npx或uvx之一，当提供多个服务配置时，确保数组中的第一个服务配置符合此项要求。
建议环境变量统一收敛到env字段中维护，如设计在启动参数中是必要的，请使用全大写格式，如--api-key=YOUR_API_KEY。
服务配置的 JSON 数据中，确保无注释内容。
建议服务配置中提供的 NPM/Pypi 包名统一加上@latest后缀，以便社区用户新连接时始终能够使用最新版本。
注意事项#
不是所有的 MCP 服务都适合部署到远程使用，这往往与 MCP 服务是否依赖本地资源、远程托管部署该服务是否有潜在安全问题等有关，因此创建提交时强烈呼吁您仔细判断，准确设置 MCP 服务的托管类型。
现阶段的自动部署检测策略仅验证到成功调用 list_tools 方法，而托管的 MCP 服务背后是否依赖本地资源、所依赖的API是否服务正常等因素无法被检测策略完全覆盖，因此不是所有平台 hosted MCP 服务的每个工具都可以正常被使用。建议您连接完成后，在工具测试页面手动测试您感兴趣的工具，如有任何问题欢迎联系我们反馈。